<?php
/**
 * ReturnInstanceStockType
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ReturnInstanceStockType Class Doc Comment
 *
 * @category Class
 * @description Тип остатка на складе:  * &#x60;FIT&#x60; — годный.  * &#x60;DEFECT&#x60; — бракованный.  * &#x60;ANOMALY&#x60; — аномалия.  * &#x60;SURPLUS&#x60; — лишний.  * &#x60;EXPIRED&#x60; — просроченный.  * &#x60;MISGRADING&#x60; — пересортица.  * &#x60;UNDEFINED&#x60; — с неизвестным статусом.  * &#x60;INCORRECT_IMEI&#x60; — товар с некорректным [IMEI](https://ru.wikipedia.org/wiki/IMEI).  * &#x60;INCORRECT_SERIAL_NUMBER&#x60; — товар с некорректным серийным номером.  * &#x60;INCORRECT_CIS&#x60; — товар с некорректным кодом идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  * &#x60;PART_MISSING&#x60; — недостача.  * &#x60;NON_COMPLIENT&#x60; — товар с множественными несоответствиями.  * &#x60;NOT_ACCEPTABLE&#x60; — товар, который Маркет не принимает.  * &#x60;SERVICE&#x60; — сервисный сток.  * &#x60;MARKDOWN&#x60; — уценка.  * &#x60;DEMO&#x60; — демо.  * &#x60;REPAIR&#x60; — ремонт.  * &#x60;FIRMWARE&#x60; — прошивка.  * &#x60;UNKNOWNS&#x60; — неизвестный тип товара.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ReturnInstanceStockType
{
    /**
     * Possible values of this enum
     */
    public const FIT = 'FIT';

    public const DEFECT = 'DEFECT';

    public const ANOMALY = 'ANOMALY';

    public const SURPLUS = 'SURPLUS';

    public const EXPIRED = 'EXPIRED';

    public const MISGRADING = 'MISGRADING';

    public const UNDEFINED = 'UNDEFINED';

    public const INCORRECT_IMEI = 'INCORRECT_IMEI';

    public const INCORRECT_SERIAL_NUMBER = 'INCORRECT_SERIAL_NUMBER';

    public const INCORRECT_CIS = 'INCORRECT_CIS';

    public const PART_MISSING = 'PART_MISSING';

    public const NON_COMPLIENT = 'NON_COMPLIENT';

    public const NOT_ACCEPTABLE = 'NOT_ACCEPTABLE';

    public const SERVICE = 'SERVICE';

    public const MARKDOWN = 'MARKDOWN';

    public const DEMO = 'DEMO';

    public const REPAIR = 'REPAIR';

    public const FIRMWARE = 'FIRMWARE';

    public const UNKNOWN = 'UNKNOWN';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::FIT,
            self::DEFECT,
            self::ANOMALY,
            self::SURPLUS,
            self::EXPIRED,
            self::MISGRADING,
            self::UNDEFINED,
            self::INCORRECT_IMEI,
            self::INCORRECT_SERIAL_NUMBER,
            self::INCORRECT_CIS,
            self::PART_MISSING,
            self::NON_COMPLIENT,
            self::NOT_ACCEPTABLE,
            self::SERVICE,
            self::MARKDOWN,
            self::DEMO,
            self::REPAIR,
            self::FIRMWARE,
            self::UNKNOWN
        ];
    }
}


